/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        THTL: THTL {
            compatible = "zmk,behavior-hold-tap";
            label = "THTL";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        LYRS: LYRS {
            compatible = "zmk,behavior-hold-tap";
            label = "LYRS";
            bindings = <&to>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        MLYRS: MLYRS {
            compatible = "zmk,behavior-hold-tap";
            label = "MLYRS";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        QWERTY {
            bindings = <&to 3>;
            key-positions = <1 2 3 4>;
        };

        Colemak_DH {
            bindings = <&to 0>;
            key-positions = <13 14 15 16>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <24 11>;
        };

        Reset {
            bindings = <&sys_reset>;
            key-positions = <1 2 3 4 7 8 10 9 39 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak_DH {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt TILDE ESCAPE  &HMR EXCLAMATION Q  &HMR AT_SIGN W  &HMR POUND F     &HMR DOLLAR P        &HMR PERCENT B    &HMR CARET J                       &HMR AMPERSAND L      &HMR ASTERISK U                      &HMR LEFT_PARENTHESIS Y  &HMR RIGHT_PARENTHESIS SEMI  &kp BSPC
&kp TAB           &HMR LEFT_SHIFT A   &HMR LCTRL R    &HMR LEFT_ALT S  &HMR LEFT_COMMAND T  &kp G             &kp M                              &HMR RIGHT_COMMAND N  &HMR RIGHT_ALT E                     &HMR RCTRL I             &HMR RIGHT_SHIFT O           &HMR BACKSLASH SQT
&kp LEFT_SHIFT    &kp Z               &kp X           &kp C            &kp D                &kp V             &kp K                              &kp H                 &kp COMMA                            &kp DOT                  &HMR MINUS FSLH              &HMR RG(RS(T)) RC(RS(T))
                                                      &lt 1 DELETE     &kp ENTER            &LYRS 2 1         &HMR LG(LA(LC(A))) LC(LA(DELETE))  &kp SPACE             &HMR LS(LG(LC(NUMBER_4))) LS(LA(S))
            >;
        };

        Num_Pad {
            display-name = "Num Pad";
            bindings = <
&mt TILDE ESCAPE          &HMR LG(F) LC(F)  &HMR LG(A) LC(A)  &HMR LG(C) LC(C)  &HMR LG(V) LC(V)  &HMR LG(X) LC(X)    &mt HOME LESS_THAN    &kp N7                       &kp N8             &kp N9               &mt SLASH MINUS  &mt RIGHT_BRACKET LEFT_BRACKET
&HMR LG(LS(T)) LC(LS(T))  &kp LEFT          &kp DOWN          &kt UP_ARROW      &kp RIGHT         &kp BACKSPACE       &mt END GREATER_THAN  &HML RIGHT_COMMAND NUMBER_4  &HML RIGHT_ALT N5  &HML RCTRL NUMBER_6  &mt ASTRK PLUS   &THTL 2 DOLLAR
&kp LEFT_SHIFT            &HMR LG(Z) LC(Z)  &HMR LG(Y) LC(Y)  &HMR LG(S) LC(S)  &HMR LG(P) LC(P)  &LYRS 3 0           &mt APOS PERIOD       &kp NUMBER_1                 &kp NUMBER_2       &kp NUMBER_3         &kp ENTER        &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS
                                                              &kp LCTRL         &kp LEFT_ALT      &kp LEFT_COMMAND    &kp SPACE             &HML EQUAL N0                &kp TAB
            >;
        };

        Gaming {
            display-name = "Raise";
            bindings = <
&kp ESC       &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6                &kp F7                &kp F8           &kp F9        &kp F10           &kp F11
&kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT     &bt BT_PRV  &bt BT_NXT        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none            &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5      &bt BT_CLR_ALL    &kp C_MUTE            &kp C_VOL_DN          &kp C_VOLUME_UP  &none         &kp C_PREV        &kp C_NEXT
                                          &bl BL_TOG    &kp F12     &bl BL_CYCLE      &to 1                 &to 0                 &to 3
            >;
        };

        QWERTY {
            display-name = "QWERTY";
            bindings = <
&mt TILDE ESCAPE  &HMR EXCLAMATION Q  &HMR AT_SIGN W  &HMR POUND E     &HMR DOLLAR R        &HMR PERCENT T    &HMR CARET Y                       &HMR AMPERSAND U      &HMR ASTERISK I                      &HMR LEFT_PARENTHESIS O  &HMR RIGHT_PARENTHESIS P    &kp BSPC
&kp TAB           &HMR LEFT_SHIFT A   &HMR LCTRL S    &HMR LEFT_ALT D  &HMR LEFT_COMMAND F  &kp G             &kp H                              &HMR RIGHT_COMMAND J  &HMR RIGHT_ALT K                     &HMR RCTRL L             &HMR RIGHT_SHIFT SEMICOLON  &HMR BACKSLASH SQT
&kp LEFT_SHIFT    &kp Z               &kp X           &kp C            &kp V                &kp B             &kp N                              &kp M                 &kp COMMA                            &kp DOT                  &HMR MINUS FSLH             &HMR RG(RS(T)) RC(RS(T))
                                                      &lt 1 DELETE     &kp ENTER            &LYRS 2 1         &HMR LG(LA(LC(A))) LC(LA(DELETE))  &kp SPACE             &HMR LS(LG(LC(NUMBER_4))) LS(LA(S))
            >;
        };
    };
};
